{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","componentDidMount","window","setInterval","setState","console","log","toLocaleTimeString","componentDidUpdate","prevProps","clockName","props","componentWillUnmount","clearInterval","className","this","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","setRandomName","ReactDOM","render","getElementById"],"mappings":"2OAYMA,E,4MACJC,MAAyB,CACvBC,KAAM,IAAIC,M,EAGZC,QAAU,E,EAEVC,kBAAoB,WAClB,EAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAML,EAAO,IAAIC,KAEjB,EAAKK,SAAS,CAAEN,SAEhBO,QAAQC,IAAIR,EAAKS,wBAChB,M,EAGLC,mBAAqB,SAACC,GAChBA,EAAUC,YAAc,EAAKC,MAAMD,WAErCL,QAAQC,IAAR,uBAA4BG,EAAUC,UAAtC,eAAsD,EAAKC,MAAMD,a,EAIrEE,qBAAuB,WACrBC,cAAc,EAAKb,U,4CAGrB,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,sBAAMA,UAAU,cAAhB,SACGC,KAAKJ,MAAMD,YAGd,sBAAMI,UAAU,cAAhB,SACGC,KAAKlB,MAAMC,KAAKS,8B,GApCPS,IAAMC,WA2CXrB,I,MCjDf,SAASsB,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJ3B,MAAyB,CACvB4B,UAAU,EACVf,UAAWQ,K,EAGbjB,kBAAoB,WAClByB,SAASC,iBAAiB,eAAe,WACvC,EAAKvB,SAAS,CAAEqB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKvB,SAAS,CAAEqB,UAAU,Q,EAI9BG,cAAgBzB,aAAY,kBAAM,EAAKC,SACrC,CAAEM,UAAWQ,QACZ,M,4CAEH,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAEA,mCACE,iCACGC,KAAKlB,MAAM4B,UAAY,cAAC,EAAD,CAAOf,UAAWK,KAAKlB,MAAMa,uB,GA3B/CM,IAAMC,WAmCTO,ICjDfK,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.a969eb6c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Clock.scss';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nclass Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount = () => {\n    this.timerId = window.setInterval(() => {\n      const date = new Date();\n\n      this.setState({ date });\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  };\n\n  componentDidUpdate = (prevProps: Props) => {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.timerId);\n  };\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <span className=\"Clock__name\">\n          {this.props.clockName}\n        </span>\n\n        <span className=\"Clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\n\nimport Clock from './components/Clock';\n\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  componentDidMount = () => {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  };\n\n  setRandomName = setInterval(() => this.setState(\n    { clockName: getRandomName() },\n  ), 3300);\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        <>\n          <strong>\n            {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n          </strong>\n        </>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}